<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:jee="http://www.springframework.org/schema/jee"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/jdbc 
        http://www.springframework.org/schema/jdbc/spring-jdbc-3.1.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
		http://www.springframework.org/schema/jee 
		http://www.springframework.org/schema/jee/spring-jee-3.1.xsd">

	<tx:annotation-driven />
	<context:annotation-config />
	<!-- Scan for Spring beans declared via annotations. -->
	<context:component-scan base-package="com.avihs.movie.business" />


	<!-- hibernate properties and datasource information for system provided 
		bean -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties" ref="hibernateProperties" />
		<property name="packagesToScan">
			<list>
				<value>com.avihs.movie.business</value>
			</list>
		</property>
	</bean>

	<!-- Manager bean for transactional information -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- hibernate properties configuration in profiles -->
	<bean id="hibernateProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="properties">
			<props>
				<prop key="hibernate.dialect">${hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">${hibernate.show.sql}</prop>
				<prop key="hibernate.format_sql">${hibernate.format.sql}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
				<prop key="hibernate.connection.autocommit">${hibernate.connection.autocommit}</prop>
				<prop key="hibernate.generate_statistics">${hibernate.generate.statistics}</prop>
				<!-- <prop key="hibernate.current_session_context_class">${hibernate.current.session.context.class}</prop> -->
				<prop key="hibernate.enable_lazy_load_no_trans">${hibernate.enable.lazy.load.no.trans}</prop>
				<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>
			</props>
		</property>
	</bean>

	<!-- Poincut to apply transactionality to all repository operations -->
	<aop:config>
	<aop:pointcut id="repositoryOperation" expression="bean(*Repository*) 
		|| bean(*Dao*)" />
	<aop:advisor pointcut-ref="repositoryOperation"
	advice-ref="txAdvice" />
	</aop:config>

	<!-- Advice to define transactionality for each kind of repository operation -->
	<tx:advice id="txAdvice">
	<tx:attributes>
	<tx:method name="get*" propagation="REQUIRED" read-only="true" />
	<tx:method name="is*" propagation="SUPPORTS" read-only="true" />
	<tx:method name="find*" propagation="REQUIRED" read-only="true" />
	<tx:method name="load*" propagation="SUPPORTS" read-only="true" />
	<!-- <tx:method name="save*" propagation="REQUIRED" /> -->
	<!-- <tx:method name="update*" propagation="REQUIRED" /> -->
	<!-- <tx:method name="delete*" propagation="REQUIRED" /> -->
	<!-- <tx:method name="insert*" propagation="REQUIRED" /> -->
	</tx:attributes>
	</tx:advice>

	<!-- class path external locations -->

	<!-- import properties configuration placeholder -->
	<bean
		id="externalMultienvironmentClasspathJDBCPropertyPlaceholderConfigurer"
		class="com.avihs.movie.core.properties.CustomPropertyPlaceholderConfigurerImpl">
		<description>
			PlaceHolder of properties not included in application
			folder structure
			Uses external locations from classpath
		</description>
		<property name="locations"
			ref="externalMultienvironmentClasspathJDBCPropertiesLocations" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
	</bean>


	<!-- import configuration properties for mysql profile -->

	<bean id="externalMultienvironmentClasspathJDBCPropertiesLocations"
		class="com.avihs.movie.core.properties.PropertiesLocationsFactoryBean">
		<property name="externalDir" value="config/profiles/properties/mysql" />
		<property name="locations">
			<list>
				<value>jdbc.properties</value>
			</list>
		</property>
	</bean>




	<!-- import configuration for tomcat profile -->

	<import
		resource="classpath:spring/profiles/tomcat/app-custom-persistence-tomcat.xml" />


</beans>
